{"version":3,"sources":["config/employees_config.js","shared/EmployeesNav.js","shared/FormElements/RadioBoxes.js","shared/FormElements/InputSelect.js","shared/FormElements/EmailWithFixPart.js","shared/FormElements/InputRange.js","shared/FormElements/InputElement.js","pages/Employees/Components/EmployeeForm.js","shared/ModalWindow.js","shared/TableCols.js","shared/Table.js","shared/Card.js","pages/Employees/Employees.js","pages/TitleStatistics/TitleStatistics.js","utils/random.js","pages/EmployeesGeneration/EmployeesGeneration.js","pages/EmployeesSearch/components/SearchForm.js","pages/EmployeesSearch/EmployeesSearch.js","pages/SalaryStatistics/component/SalaryStatisticForm.js","pages/SalaryStatistics/SalaryStatistics.js","App.js","serviceWorker.js","index.js"],"names":["employeesConfig","titles","genders","salary","domainsForGenerator","namesForGenerator","name","gender","titlesForGenerator","employees","titleStatistic","search","generation","salaryStatistics","EmployeesNav","Navbar","collapseOnSelect","expand","bg","variant","className","to","Toggle","aria-controls","Collapse","id","Nav","RadioBoxes","value","label","items","handler","errors","discription","style","paddingLeft","map","item","key","checked","onChange","type","textTransform","htmlFor","InputSelect","EmailWithFixPart","fixPart","autoComplete","InputRange","min","max","InputElement","maxLength","minSalary","maxSalary","EmployeeForm","props","emailGenerator","emailFirstPart","state","formState","substring","slice","setState","changeHandler","event","target","numberTextFieldKeyCheck","test","minLengthValidator","length","emailValidator","checkErrors","Object","values","some","isInvalid","submit","preventDefault","employeData","emailAddress","addFunc","title","this","onSubmit","disabled","React","Component","ModalWindow","show","handleConfirm","handleCancel","header","bodyText","nameConfirm","nameCancel","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","onClick","TableCols","data","elem","index","Table","orderTableRecords","body","keyForRows","Card","children","Employees","pageToggle","prev","showAddForm","removeEmployee","removedItems","_","remove","idToRemove","updateEmployees","showModal","modalClose","addEmployee","bind","employe","find","splice","console","log","obj","func","removeHandler","role","EmployeesStatistics","statisticsObj","countBy","statisticsArray","entries","count","getRandomNumber","Math","round","random","getRandomElement","array","idCount","generateEmploye","names","emailAdress","toString","domains","EmployeesGeneration","onChangeHandler","i","numberOFLines","push","redirect","SearchForm","filterFunction","salaryCheck","minsalary","maxsalary","employeesSearch","filter","updateEmployeesSearch","EmployeesSearch","SalaryStatisticForm","interval","rangesCounts","showStatistic","SalaryStatistics","trunc","rangeList","rangeListItems","maxActualSalaryObj","maxBy","minActualSalaryObj","minBy","totalBudget","reduce","accum","current","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mZAAaA,G,MACA,cADAA,EAEK,mBAFLA,EAGH,UAHGA,EAIC,cAJDA,EAKO,qBAGPC,EAAS,CAAE,YAAa,sBAAuB,YAAa,aAAc,eAAgB,iBAC1FC,EAAU,CAAE,OAAQ,UACpBC,EAAS,CAAE,IAAM,MAMjBC,EAAsB,CAAC,QAAS,YAAa,UAAW,aACxDC,EAAmB,CAC9B,CAACC,KAAK,OAAQC,OAAQ,QACtB,CAACD,KAAK,OAAQC,OAAQ,QACtB,CAACD,KAAK,UAAWC,OAAQ,QACzB,CAACD,KAAK,QAASC,OAAQ,QACvB,CAACD,KAAK,SAAUC,OAAQ,QACxB,CAACD,KAAK,WAAYC,OAAQ,QAC1B,CAACD,KAAK,SAAUC,OAAQ,QACxB,CAACD,KAAK,QAASC,OAAQ,QACvB,CAACD,KAAK,QAASC,OAAQ,QACvB,CAACD,KAAK,QAASC,OAAQ,QACvB,CAACD,KAAK,OAAQC,OAAQ,UACtB,CAACD,KAAK,SAAUC,OAAQ,UACxB,CAACD,KAAK,MAAOC,OAAQ,UACrB,CAACD,KAAK,WAAYC,OAAQ,UAC1B,CAACD,KAAK,SAAUC,OAAQ,UACxB,CAACD,KAAK,YAAaC,OAAQ,UAC3B,CAACD,KAAK,MAAOC,OAAQ,UACrB,CAACD,KAAK,SAAUC,OAAQ,UACxB,CAACD,KAAK,SAAUC,OAAQ,UACxB,CAACD,KAAK,SAAUC,OAAQ,WAEbC,EAAqB,CAAE,YAAa,sBAAuB,YAAa,aAAc,eAAgB,iBChC5GC,EAAmET,EAAxDU,EAAwDV,EAAxCW,EAAwCX,EAAhCY,EAAgCZ,EAApBa,EAAoBb,EAE3D,SAASc,IACtB,OACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrD,kBAAC,IAAD,CAAMC,UAAU,eAAeC,GAAIZ,GAAnC,mBACA,kBAACM,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKN,UAAU,WACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIZ,GAAlC,kBAEF,wBAAIW,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIX,GAAlC,qBAEF,wBAAIU,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIV,GAAlC,mBAEF,wBAAIS,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIT,GAAlC,sBAEF,wBAAIQ,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIR,GAAlC,0B,qDC5BC,SAASc,EAAT,GAA+E,IAA1DrB,EAAyD,EAAzDA,KAAMsB,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,YAC9E,OACE,yBAAKb,UAAU,cACb,4BAAQc,MAAO,CAACC,YAAY,GAAIf,UAAU,uBAAuBS,GAChEC,EAAMM,KAAI,SAAAC,GAAI,OACb,yBAAKjB,UAAU,+BAA+BkB,IAAKD,GACjD,2BAAOjB,UAAU,mBAAmBmB,QAASX,IAAUS,EAAMG,SAAUT,EAASU,KAAK,QAAQnC,KAAMA,EAAMmB,GAAE,eAAUY,GAAQT,MAAOS,IACpI,2BAAOH,MAAO,CAACQ,cAAe,cAAetB,UAAS,4BAAuBQ,GAAS,aAAee,QAAO,eAAUN,IAASA,OAGnI,2BAAOjB,UAAU,wBAAwBa,GACxCD,EAAO1B,IAAS,2BAAOc,UAAU,yBAAyBY,EAAO1B,KCXzD,SAASsC,EAAT,GAAiE,IAA3CtC,EAA0C,EAA1CA,KAAMuB,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAASE,EAAa,EAAbA,YAChE,OACE,yBAAKb,UAAU,cACb,2BAAOuB,QAAO,UAAKrC,EAAL,eAAwBuB,GACtC,4BAAQJ,GAAE,UAAKnB,EAAL,cAAuBc,UAAU,eAAeoB,SAAUT,EAASzB,KAAMA,GAChFwB,EAAMM,KAAI,SAAAC,GAAI,OACb,4BAAQC,IAAKD,EAAMT,MAAOS,GAAOA,OAGrC,2BAAOjB,UAAU,wBAAwBa,ICThC,SAASY,EAAT,GAAuF,IAA5DvC,EAA2D,EAA3DA,KAAMuB,EAAqD,EAArDA,MAAOiB,EAA8C,EAA9CA,QAASlB,EAAqC,EAArCA,MAAOG,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,YACtF,OACE,yBAAKb,UAAU,cACb,2BAAOuB,QAAO,UAAKrC,EAAL,cAAuBuB,GACrC,yBAAKT,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,oCAAoCqB,IAE5E,2BACEL,KAAK,OACLb,MAAOA,EACPY,SAAUT,EACVX,UAAS,yBAAoBQ,GAASI,EAAO1B,KAAS,aACtDmB,GAAE,UAAKnB,EAAL,aACFA,KAAMA,EACNyC,aAAa,SAGjB,2BAAO3B,UAAU,wBAAwBa,GACxCD,EAAO1B,IAAS,2BAAOc,UAAU,yBAAyBY,EAAO1B,KCnBzD,SAAS0C,EAAT,GAA0E,IAArD1C,EAAoD,EAApDA,KAAM2C,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,IAAKrB,EAAoC,EAApCA,MAAOD,EAA6B,EAA7BA,MAAOG,EAAsB,EAAtBA,QAASE,EAAa,EAAbA,YACzE,OACE,yBAAKb,UAAU,cACb,2BAAOuB,QAAO,UAAKrC,EAAL,cAAuBuB,EAArC,KAA6C,gCAASD,IACtD,2BACEa,KAAK,QACLrB,UAAU,eACV6B,IAAKA,EACLC,IAAKA,EACLzB,GAAE,UAAKnB,EAAL,aACFkC,SAAUT,EACVH,MAAOA,EACPtB,KAAMA,IAER,2BAAOc,UAAU,wBAAwBa,ICdhC,SAASkB,EAAT,GAAwG,IAAjF7C,EAAgF,EAAhFA,KAAMmC,EAA0E,EAA1EA,KAAMQ,EAAoE,EAApEA,IAAKC,EAA+D,EAA/DA,IAAKtB,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,MAAOE,EAA4C,EAA5CA,QAA4C,IAAnCC,cAAmC,MAA5B,GAA4B,EAAxBoB,EAAwB,EAAxBA,UAAWnB,EAAa,EAAbA,YACvG,OACE,yBAAKb,UAAU,cACb,2BAAOuB,QAAO,UAAKrC,EAAL,cAAuBuB,GACrC,2BACEY,KAAMA,EACNb,MAAOA,EACPY,SAAUT,EACVqB,UAAWA,EACXH,IAAKA,EACLC,IAAKA,EACL9B,UAAS,yBAAoBQ,GAASI,EAAO1B,KAAU,aACvDmB,GAAE,UAAKnB,EAAL,aACFA,KAAMA,EACNyC,aAAa,QAEf,2BAAO3B,UAAU,wBAAwBa,GACxCD,EAAO1B,IAAS,2BAAOc,UAAU,yBAAyBY,EAAO1B,K,kBCVzCH,E,GAAxBkD,E,KAAWC,E,KAEGC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRC,eAAiB,WACb,IAAMC,EAAiB,EAAKC,MAAMC,UAAUtD,KAAO,EAAKqD,MAAMC,UAAUnC,GAAGoC,UAAU,EAAE,GAAK,EAAKF,MAAMD,eAAeI,OAAO,GAC7H,EAAKC,SAAS,CAACL,oBAnBA,EAsBnBM,cAAgB,SAAAC,GAAU,IAAD,EACHA,EAAMC,OAArB5D,EADkB,EAClBA,KAAMsB,EADY,EACZA,MACLgC,EAAS,eAAO,EAAKD,MAAMC,WACjCA,EAAUtD,GAAQsB,EAElB,EAAKmC,SAAS,CAACH,cAAY,WAAoB,SAATtD,GAA4B,OAATA,GAAe,EAAKmD,qBA3B5D,EA+BnBU,wBAA0B,SAAAF,GACxB,IAAMjC,EAAS,EAAK2B,MAAM3B,OAC1BA,EAAM,GAAS,GACX,QAAQoC,KAAKH,EAAMC,OAAOtC,QAAiC,KAAvBqC,EAAMC,OAAOtC,MACnD,EAAKyC,mBAAmBJ,EPpCN,GOsClBjC,EAAM,GAAS,iCAEjB,EAAK+B,SAAS,CAAC/B,YAvCE,EA2CnBqC,mBAAqB,SAACJ,EAAOhB,GAAS,IAAD,EACfgB,EAAMC,OAArB5D,EAD8B,EAC9BA,KAAMsB,EADwB,EACxBA,MACLI,EAAS,EAAK2B,MAAM3B,OAC1BA,EAAO1B,GAAQ,GACXsB,EAAM0C,OAASrB,IACjBjB,EAAO1B,GAAP,6CAAqD2C,EAArD,aAEF,EAAKc,SAAS,CAAE/B,WAChB,EAAKgC,cAAcC,IAnDF,EAuDnBM,eAAiB,SAAAN,GAAU,IAAD,EACJA,EAAMC,OAArB5D,EADmB,EACnBA,KAAMsB,EADa,EACbA,MACLI,EAAS,EAAK2B,MAAM3B,OAC1BA,EAAO1B,GAAQ,GACT,kBAAkB8D,KAAK,EAAKT,MAAMD,eAAiB9B,KACvDI,EAAO1B,GAAP,qBAEF,EAAKyD,SAAS,CAAE/B,WAChB,EAAKgC,cAAcC,IA/DF,EAmEnBO,YAAc,WACRC,OAAOC,OAAO,EAAKf,MAAMC,WAAWe,MAAK,SAAAtC,GAAI,MAAa,KAATA,MAAgBoC,OAAOC,OAAO,EAAKf,MAAM3B,QAAQ2C,MAAK,SAAAtC,GAAI,MAAa,KAATA,KACjH,EAAKuC,WAAY,EAEjB,EAAKA,WAAY,GAvEF,EA2EnBC,OAAS,SAAAZ,GACPA,EAAMa,iBACN,IAAMC,EAAW,eAAO,EAAKpB,MAAMC,WAEnC,GADAmB,EAAYC,aAAe,EAAKrB,MAAMD,eAAiB,EAAKC,MAAMC,UAAUoB,cACvE,EAAKxB,MAAMyB,QAAQF,GAAc,CACpC,IAAM/C,EAAS,EAAK2B,MAAM3B,OAC1BA,EAAM,GAAS,yBACf,EAAK+B,SAAS,CAAE/B,aAhFlB,EAAK4C,WAAY,EACjB,EAAKjB,MAAQ,CACXD,eAAgB,IAChBE,UAAW,CACTnC,GAAI,GACJuD,aAAc,GACd1E,KAAM,GACNC,OAAQ,GACRJ,OAAQ,OACR+E,MAAOjF,EAAO,IAEhB+B,OAAQ,IAbO,E,qDAsFV,IAAD,OAEN,OADAmD,KAAKX,cAED,0BAAMY,SAAUD,KAAKN,QACnB,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC+B,EAAD,CACEV,KAAK,OACLnC,KAAK,KACLsB,MAAOuD,KAAKxB,MAAMC,UAAX,GACP/B,MAAM,aACNE,QAASoD,KAAKhB,wBACdnC,OAAQmD,KAAKxB,MAAM3B,OACnBoB,UPpGQ,EOqGRnB,YAAW,mDPrGH,EOqGG,cAGf,yBAAKb,UAAU,UACb,kBAAC+B,EAAD,CACEV,KAAK,OACLnC,KAAK,OACLsB,MAAOuD,KAAKxB,MAAMC,UAAX,KACP/B,MAAM,eACNE,QAAS,SAAAkC,GAAQ,EAAKI,mBAAmBJ,EP7G5B,IO8GbjC,OAAQmD,KAAKxB,MAAM3B,OACnBC,YAAW,8DPhHH,EOgHG,gBAIjB,yBAAKb,UAAU,OACb,yBAAKA,UAAU,UACb,kBAACO,EAAD,CACErB,KAAK,SACLsB,MAAOuD,KAAKxB,MAAMC,UAAUrD,OAC5BsB,MAAM,SACNC,MAAO5B,EACP6B,QAASoD,KAAKnB,cACdhC,OAAQmD,KAAKxB,MAAM3B,OACnBC,YAAY,wBAGhB,yBAAKb,UAAU,UACb,kBAACwB,EAAD,CACEtC,KAAK,QACLuB,MAAM,QACNC,MAAO7B,EACP8B,QAASoD,KAAKnB,cACd/B,YAAY,wBAIlB,kBAACY,EAAD,CACEvC,KAAK,eACLuB,MAAM,iBACNiB,QAASqC,KAAKxB,MAAMD,eACpB9B,MAAOuD,KAAKxB,MAAMC,UAAUoB,aAC5BjD,QAASoD,KAAKZ,eACdvC,OAAQmD,KAAKxB,MAAM3B,OACnBC,YAAY,yBAEd,kBAACe,EAAD,CACE1C,KAAK,SACL2C,IAAKI,EACLH,IAAKI,EACLzB,MAAM,SACND,MAAOuD,KAAKxB,MAAMC,UAAUzD,OAC5B4B,QAASoD,KAAKnB,cACd/B,YAAY,uBAEd,yBAAKb,UAAU,cACb,4BAAQiE,SAAUF,KAAKP,UAAWnC,KAAK,SAASrB,UAAU,wBAA1D,oBAEAqD,OAAOC,OAAOS,KAAKxB,MAAMC,WAAWe,MAAK,SAAAtC,GAAI,MAAa,KAATA,MAAgB,2BAAOjB,UAAU,yBAAjB,gC,GA/JnCkE,IAAMC,W,gBCRjC,SAASC,EAAT,GAAsG,IAAhFC,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,cAAeC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAErG,OACI,kBAACC,EAAA,EAAD,CAAOP,KAAMA,EAAMQ,OAAQN,GACzB,kBAACK,EAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,EAAA,EAAMI,MAAP,KAAcR,IAEd,kBAACI,EAAA,EAAMK,KAAP,KAAaR,GACb,kBAACG,EAAA,EAAMM,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQpF,QAAQ,OAAOqF,QAASb,GAC7BI,GAEH,kBAACQ,EAAA,EAAD,CAAQpF,QAAQ,SAASqF,QAASd,GAC/BI,KCbE,SAASW,EAAT,GAAiC,IAAbC,EAAY,EAAZA,KAAMjE,EAAM,EAANA,KACvC,OACEiE,EAAKtE,KAAI,SAACuE,EAAMC,GAAP,MAAuB,OAAPnE,EAAc,wBAAIH,IAAKsE,GAAQD,GAAa,wBAAIrE,IAAKsE,GAAQD,MCD3E,SAASE,EAAMrD,GAE5B,IAAMsD,EAAoBtD,EAAMuD,KAAK3E,KACnC,SAAAC,GACE,OACE,wBAAIC,IAAKkB,EAAMwD,WAAW3E,IACxB,kBAACoE,EAAD,CAAWC,KAAMjC,OAAOC,OAAOrC,SAMvC,OACE,yBAAKjB,UAAS,UAAKoC,EAAMpC,YACvB,2BAAOA,UAAU,oCACf,+BACE,4BACE,kBAACqF,EAAD,CAAWhE,KAAK,KAAKiE,KAAMlD,EAAMoC,WAGrC,+BACGkB,KCvBI,SAASG,EAAKzD,GAC3B,OACE,yBAAKpC,UAAS,eAAUoC,EAAMpC,YAC5B,yBAAKA,UAAU,eACb,4BAAKoC,EAAM3B,QAEb,yBAAKT,UAAU,aACZoC,EAAM0D,W,UCCMC,E,kDACnB,WAAY3D,GAAO,IAAD,8BAChB,cAAMA,IAoBR4D,WAAa,WACX,EAAKrD,UAAS,SAAAsD,GAAI,MAAG,CAACC,aAAcD,EAAKC,iBAtBzB,EAyBlBC,eAAiB,WACf,IAAIC,EACE/G,EAAS,YAAO,EAAK+C,MAAM/C,WAIjC,OAHA+G,EAAeC,IAAEC,OAAOjH,GAAW,SAAAkG,GAAI,OAAIA,EAAKlF,KAAO,EAAKkG,cAC5D,EAAKnE,MAAMoE,gBAAgBnH,GAC3B,EAAKsD,SAAS,CAAC8D,WAAU,IACM,IAAxBL,EAAalD,QA/BJ,EAwClBwD,WAAa,WAAO,EAAK/D,SAAS,CAAC8D,WAAW,KAtC5C,EAAKF,WAAa,KAClB,EAAKhE,MAAQ,CACX2D,YAAa,EACbO,WAAW,GAEb,EAAKE,YAAc,EAAKA,YAAYC,KAAjB,gBAPH,E,wDAUNC,GACV,IAAMxH,EAAS,YAAO0E,KAAK3B,MAAM/C,WACjC,OAAIA,EAAUyH,MAAK,SAAA7F,GAAI,OAAIA,EAAKZ,KAAOwG,EAAQxG,QAG/ChB,EAAU0H,OAAO,EAAE,EAAGF,GACtB9C,KAAK3B,MAAMoE,gBAAgBnH,GAC3B0E,KAAKpB,SAAS,CAACuD,YAAY,KACpB,K,oCAgBM7F,GACb2G,QAAQC,IAAI5G,GACZ0D,KAAKwC,WAAWlG,EAChB0D,KAAKpB,SAAS,CAAC8D,WAAU,M,+BAKlB,IAAD,OAEN,OACE,oCACE,kBAACrC,EAAD,CACEC,KAAMN,KAAKxB,MAAMkE,UACjBnC,cAAeP,KAAKoC,eACpB5B,aAAcR,KAAK2C,WACnBlC,OAAQ,iBACRC,SAAQ,oDAA+CV,KAAKwC,WAApD,KACR7B,YAAa,UACbC,WAAY,WAGd,yBAAK3E,UAAU,aACb,yBAAKA,UAAU,6BACX+D,KAAKxB,MAAM2D,YAEX,4BAAQ7E,KAAK,SAASrB,UAAU,eAAeoF,QAASrB,KAAKiC,YAAY,uBAAGhG,UAAU,iBAAtF,cADA,4BAAQqB,KAAK,SAASrB,UAAU,eAAeoF,QAASrB,KAAKiC,YAAY,uBAAGhG,UAAU,sBAAtF,qBAKN,kBAAC6F,EAAD,CAAMpF,MAAM,eAAeT,UAAU,kBAEnC+D,KAAKxB,MAAM2D,YACX,kBAAC,EAAD,CAAcrC,QAASE,KAAK4C,cAG1B5C,KAAK3B,MAAM/C,UAAU6D,OAAS,EAC9B,kBAACuC,EAAD,CACEzF,UAAU,kBACV4F,WAAc,SAAAsB,GAAG,OAAIA,EAAI7G,IACzBsF,KAAM5B,KAAK3B,MAAM/C,UAAU2B,KAAI,SAAAC,GAG7B,OAFAA,EAAI,eAAOA,IACNkG,KAAK,uBAAGnH,UAAU,cAAcoF,QAAS,EAAKgC,cAAcR,KAAK,EAAM3F,EAAKZ,MAC1EY,KAETuD,OAAQ,CAAC,KAAK,SAAU,OAAQ,SAAU,SAAU,QAAS,uBAAGxE,UAAU,mBAE5E,yBAAKA,UAAU,mBAAmBqH,KAAK,SAAvC,2B,GAlF2BnD,IAAMC,W,MCF9B,SAASmD,GAAT,GAA0C,IAAZjI,EAAW,EAAXA,UACrCkI,EAAgBlB,IAAEmB,QAAQnI,EAAW,SACrCoI,EAAkBpE,OAAOqE,QAAQH,GAAevG,KAAI,SAACC,EAAMuE,GAAY,MAAO,CAAC1B,MAAO7C,EAAK,GAAI0G,MAAO1G,EAAK,OAEjH,OACE,kBAAC4E,EAAD,CAAMpF,MAAM,oBAAoBT,UAAU,wBACvCX,EAAU6D,OACX,kBAACuC,EAAD,CAAOzF,UAAU,wBAAwB4F,WAAc,SAAAsB,GAAG,OAAIA,EAAIpD,OAAO6B,KAAM8B,EAAiBjD,OAAQ,CAAC,QAAQ,WACjH,yBAAKxE,UAAU,mBAAmBqH,KAAK,SAAvC,sB,aChBC,SAASO,GAAgB/F,EAAKC,GACnC,OAAOD,EAAMgG,KAAKC,MAAMD,KAAKE,UAAYjG,EAAMD,IAG1C,SAASmG,GAAiBC,GAC/B,OAAOA,EAAML,GAAgB,EAAGK,EAAM/E,OAAS,I,yBCMlBnE,E,GAAxBkD,G,MAAWC,G,MACX7C,GAAaT,EAChBsJ,GfE+B,IeAnC,SAASC,KACP,IAAM9H,EAAK6H,KADa,EAEDF,GAAiBI,GAAjClJ,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,OACPJ,EAAS6I,IAAiB3F,IAAYC,IACtC4B,EAAQkE,GAAiBnJ,GACzBwJ,EAAW,UAAMnJ,GAAN,OAAamB,EAAGiI,WAAW7F,UAAU,EAAE,GAAvC,YAA6CuF,GAAiBO,IAC/E,MAAO,CAAClI,KAAIgI,cAAanJ,OAAMC,SAAQJ,SAAQ+E,S,IAG5B0E,G,kDACnB,WAAYpG,GAAO,IAAD,8BAChB,cAAMA,IAORqG,gBAAkB,SAAA5F,GAAU,IAAD,EACHA,EAAMC,OAArB5D,EADkB,EAClBA,KAAMsB,EADY,EACZA,MACb,EAAKmC,SAAL,gBAAgBzD,EAAOsB,KAVP,EAalBiD,OAAS,SAAAZ,GACPA,EAAMa,iBAEN,IADA,IAAMrE,EAAY,GACTqJ,EAAE,EAAGA,EAAE,EAAKnG,MAAMoG,cAAeD,IACxCrJ,EAAUuJ,KAAKT,MAEjB,EAAK/F,MAAMoE,gBAAgBnH,GAC3B,EAAKsD,SAAS,CAACkG,UAAU,KAlBzB,EAAKtG,MAAM,CACToG,cAAc,GACdE,UAAU,GAJI,E,qDAwBhB,OACE,oCACC9E,KAAKxB,MAAMsG,UAAY,kBAAC,IAAD,CAAU5I,GAAIZ,KACpC,kBAACwG,EAAD,CAAM7F,UAAU,iBAAiBS,MAAM,sBACrC,0BAAMuD,SAAUD,KAAKN,QACnB,yBAAKzD,UAAU,+BACb,yBAAKA,UAAU,eACb,kBAAC+B,EAAD,CACEV,KAAK,SACLnC,KAAK,gBACLuB,MAAM,kBACND,MAAOuD,KAAKxB,MAAMoG,cAClBhI,QAASoD,KAAK0E,gBACd5H,YAAY,qDACZiB,IAAK,OAGT,yBAAK9B,UAAU,eACb,4BAAQqB,KAAK,SAASrB,UAAU,wBAAhC,sB,GA3CiCkE,IAAMC,W,eClBxBpF,E,GAAxBkD,G,MAAWC,G,MA4EH4G,G,kDAzEb,WAAY1G,GAAO,IAAD,8BAChB,cAAMA,IAQRqG,gBAAkB,SAAA5F,GAAU,IAAD,EACHA,EAAMC,OAArB5D,EADkB,EAClBA,KAAMsB,EADY,EACZA,MACb,EAAKmC,SAAL,gBAAgBzD,EAAOsB,KAXP,EAclBuI,eAAiB,SAAA9H,GACf,IAAM+H,EAAe/H,EAAKlC,QAAU,EAAKwD,MAAM0G,WAAehI,EAAKlC,OAAS,EAAKwD,MAAM2G,UACvF,OAAM,EAAK3G,MAAMuB,MACP7C,EAAK6C,QAAU,EAAKvB,MAAMuB,OAAUkF,EAErCA,GAnBO,EAuBlBvF,OAAS,SAAAZ,GACPA,EAAMa,iBACN,IAAMyF,EAAkB,EAAK/G,MAAM/C,UAAU+J,OAAO,EAAKL,gBACzD,EAAK3G,MAAMiH,sBAAsBF,IAxBjC,EAAK5G,MAAM,CACT0G,UAAWhH,GACXiH,UAAWhH,GACX4B,MAAM,IALQ,E,qDA8BhB,OACE,0BAAME,SAAUD,KAAKN,QACnB,yBAAKzD,UAAU,+BACb,yBAAKA,UAAU,UACb,kBAAC4B,EAAD,CACE1C,KAAK,YACL2C,IAAKI,GACLH,IAAKiC,KAAKxB,MAAM2G,UAChBzI,MAAM,aACND,MAAOuD,KAAKxB,MAAM0G,UAClBtI,QAASoD,KAAK0E,gBACd5H,YAAW,8BAAoBoB,GAApB,cAAmC8B,KAAKxB,MAAM2G,cAG7D,yBAAKlJ,UAAU,UACb,kBAAC4B,EAAD,CACE1C,KAAK,YACL2C,IAAKkC,KAAKxB,MAAM0G,UAChBnH,IAAKI,GACLzB,MAAM,aACND,MAAOuD,KAAKxB,MAAM2G,UAClBvI,QAASoD,KAAK0E,gBACd5H,YAAW,8BAAoBkD,KAAKxB,MAAM0G,UAA/B,cAA8C/G,OAG7D,yBAAKlC,UAAU,eACb,kBAACwB,EAAD,CACEtC,KAAK,QACLuB,MAAM,QACNC,MAAK,CAAG,IAAH,mBAAU7B,IACf8B,QAASoD,KAAK0E,gBACd5H,YAAY,uBAGhB,yBAAKb,UAAU,eACb,4BAAQqB,KAAK,SAASrB,UAAU,wBAAuB,uBAAGA,UAAU,kBAApE,kB,GAlEamE,aCAJmF,I,wDACnB,WAAYlH,GAAO,IAAD,8BAChB,cAAMA,IAWRiH,sBAAwB,SAAAF,GAAe,OAAI,EAAKxG,SAAS,CAACwG,qBAVxD,EAAK5G,MAAM,CAET4G,gBAAiB,EAAK/G,MAAM/C,WAJd,E,mGAehB,OACE,kBAACwG,EAAD,CAAM7F,UAAU,cAAcS,MAAM,UACpC,kBAAC,GAAD,CAAYpB,UAAW0E,KAAK3B,MAAM/C,UAAWgK,sBAAuBtF,KAAKsF,wBAEvEtF,KAAKxB,MAAM4G,gBAAgBjG,OAAO,EAClC,kBAACuC,EAAD,CAAOzF,UAAU,eAAe4F,WAAc,SAAAsB,GAAG,OAAIA,EAAI7G,IAAIsF,KAAM5B,KAAKxB,MAAM4G,gBAAiB3E,OAAQ,CAAC,KAAK,SAAU,OAAQ,SAAU,SAAU,WACnJ,yBAAKxE,UAAU,mBAAmBqH,KAAK,SAAvC,wC,GAtBqCnD,IAAMC,YCwCpCoF,G,kDA1Cb,WAAYnH,GAAO,IAAD,8BAChB,cAAMA,IAQRqG,gBAAkB,SAAA5F,GAAU,IAAD,EACHA,EAAMC,OAArB5D,EADkB,EAClBA,KAAMsB,EADY,EACZA,MACb,EAAKmC,SAAL,gBAAgBzD,EAAOsB,KAXP,EAclBiD,OAAS,SAAAZ,GACPA,EAAMa,iBACN,EAAKtB,MAAMqB,QAAQ,EAAKlB,MAAMiH,WAd9B,EAAKjH,MAAM,CACTiH,SAAS,IACTC,aAAa,GACbC,eAAe,GALD,E,qDAoBhB,OACE,0BAAM1F,SAAUD,KAAKN,QACnB,yBAAKzD,UAAU,+BACb,yBAAKA,UAAU,UACb,kBAAC+B,EAAD,CACEV,KAAK,SACLnC,KAAK,WACLuB,MAAM,iBACND,MAAOuD,KAAKxB,MAAMiH,SAClB7I,QAASoD,KAAK0E,gBACd5H,YAAY,sFAGhB,yBAAKb,UAAU,eACb,4BAAQiE,SAAUF,KAAKP,UAAWnC,KAAK,SAASrB,UAAU,wBAA1D,wB,GApCsBmE,a,sBCKHpF,E,IAAxBkD,G,MAAWC,G,MAEGyH,G,kDACnB,WAAYvH,GAAO,IAAD,8BAChB,cAAMA,IAWRqB,OAAS,SAAA+F,GACH,EAAKpH,MAAM/C,UAAU6D,OAAS,IAChC,EAAKP,SAAS,CAAC8G,aAAapD,IAAEmB,QAAQ,EAAKpF,MAAM/C,WAAW,SAAA4B,GAAI,OAAI4G,KAAK+B,OAAO3I,EAAKlC,OAASkD,IAAWuH,QACzG,EAAKA,SAAWA,GAElB,EAAK7G,SAAS,CAAC+G,eAAe,KAjBd,EAoBlBG,UAAY,WAGV,IADA,IAAMC,EAAiB,GACdpB,EAAE,EAAEA,EAAEb,KAAK+B,OAAO1H,GAAUD,IAAW,EAAKuH,UAAU,EAAGd,IAChEoB,EAAelB,KACb,wBAAI5I,UAAU,kBAAkBkB,IAAKwH,GAClCzG,GAAY,EAAKuH,SAAWd,EAD/B,MACqCzG,GAAY,EAAKuH,UAAYd,EAAI,GADtE,KAC4E,EAAKnG,MAAMkH,aAAaf,GAAG,EAAKnG,MAAMkH,aAAaf,GAAG,IAItI,OAAOoB,GA5BP,EAAKC,mBAAqB1D,IAAE2D,MAAM,EAAK5H,MAAM/C,WAAW,SAAA4B,GAAI,OAAEA,EAAKlC,UACnE,EAAKkL,mBAAqB5D,IAAE6D,MAAM,EAAK9H,MAAM/C,WAAW,SAAA4B,GAAI,OAAEA,EAAKlC,UACnE,EAAKoL,YAAc,EAAK/H,MAAM/C,UAAU+K,QAAO,SAACC,EAAOC,GAAR,OAAoBD,EAAQC,EAAQvL,SAAQ,GAC3F,EAAKyK,SAAW,KAChB,EAAKjH,MAAM,CACTkH,aAAa,GACbC,eAAe,GARD,E,qDAkChB,OACM,kBAAC7D,EAAD,CAAM7F,UAAU,wBAAwBS,MAAM,qBAC5C,kBAAC,GAAD,CAAqBgD,OAAQM,KAAKN,SAElCM,KAAKxB,MAAMmH,gBAET3F,KAAK3B,MAAM/C,UAAU6D,OAAS,EAC9B,wBAAIlD,UAAU,yBAAyB+D,KAAK8F,aAC5C,yBAAK7J,UAAU,mBAAmBqH,KAAK,SAAvC,sBAGJ,wBAAIrH,UAAU,cACZ,wBAAIA,UAAU,mBAAd,gCAAyD+D,KAAKkG,mBAAqBlG,KAAKkG,mBAAmBlL,OAAS,KACpH,wBAAIiB,UAAU,mBAAd,gCAAyD+D,KAAKgG,mBAAqBhG,KAAKgG,mBAAmBhL,OAAS,KACpH,wBAAIiB,UAAU,mBAAd,8BAAuD+D,KAAKoG,mB,GAjD1BjG,IAAMC,WCC7C9E,GAAmET,EAAxDU,GAAwDV,EAAxCW,GAAwCX,EAAhCY,GAAgCZ,EAApBa,GAAoBb,EACrD2L,G,kDACnB,WAAYnI,GAAO,IAAD,8BAChB,cAAMA,IAMRoE,gBAAkB,SAAAnH,GAAS,OAAI,EAAKsD,SAAS,CAACtD,eAL5C,EAAKkD,MAAO,CACVlD,UAAW,IAHG,E,qDAUhB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmL,KAAK,IAAIC,OAAK,GAAC,kBAAC,IAAD,CAAUxK,GAAIZ,MACpC,kBAAC,IAAD,CAAOmL,KAAMnL,IAAW,kBAAC,EAAD,CAAWA,UAAW0E,KAAKxB,MAAMlD,UAAWmH,gBAAiBzC,KAAKyC,mBAC1F,kBAAC,IAAD,CAAOgE,KAAMlL,IAAgB,kBAAC,GAAD,CAAiBD,UAAW0E,KAAKxB,MAAMlD,aACpE,kBAAC,IAAD,CAAOmL,KAAMjL,IAAQ,kBAAC,GAAD,CAAiBF,UAAW0E,KAAKxB,MAAMlD,aAC5D,kBAAC,IAAD,CAAOmL,KAAMhL,IAAY,kBAAC,GAAD,CAAqBgH,gBAAiBzC,KAAKyC,mBACpE,kBAAC,IAAD,CAAOgE,KAAM/K,IAAkB,kBAAC,GAAD,CAAkBJ,UAAW0E,KAAKxB,MAAMlD,mB,GApBhD6E,IAAMC,WCDnBuG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,GAAD,MAGFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1E,QAAQ0E,MAAMA,EAAMC,c","file":"static/js/main.a6d88ace.chunk.js","sourcesContent":["export const employeesConfig = {\r\n  employees: '/employees',\r\n  titleStatistic: '/title/statistic',\r\n  search: '/search',\r\n  generation: '/generation',\r\n  salaryStatistics: '/salary/statistics',\r\n}\r\n\r\nexport const titles = [ 'Developer', 'Development Manager', 'QA Tester', 'QA Manager', 'Sales Person', 'Sales Manager'];\r\nexport const genders = [ 'male', 'female'];\r\nexport const salary = [ 5000, 35000];\r\nexport const idLength = 5;\r\nexport const nameMinLength = 4;\r\n\r\n// Data for generation\r\nexport const firstIdForGenerator = 10000\r\nexport const domainsForGenerator = ['co.il', 'gmail.com', 'mail.ru', 'e-mail.ua'];\r\nexport const namesForGenerator =[\r\n  {name:'Liam', gender: 'male'},\r\n  {name:'Noah', gender: 'male'},\r\n  {name:'William', gender: 'male'},\r\n  {name:'James', gender: 'male'},\r\n  {name:'Oliver', gender: 'male'},\r\n  {name:'Benjamin', gender: 'male'},\r\n  {name:'Elijah', gender: 'male'},\r\n  {name:'Lucas', gender: 'male'},\r\n  {name:'Mason', gender: 'male'},\r\n  {name:'Logan', gender: 'male'},\r\n  {name:'Emma', gender: 'female'},\r\n  {name:'Olivia', gender: 'female'},\r\n  {name:'Ava', gender: 'female'},\r\n  {name:'Isabella', gender: 'female'},\r\n  {name:'Sophia', gender: 'female'},\r\n  {name:'Charlotte', gender: 'female'},\r\n  {name:'Mia', gender: 'female'},\r\n  {name:'Amelia', gender: 'female'},\r\n  {name:'Harper', gender: 'female'},\r\n  {name:'Evelyn', gender: 'female'},\r\n]\r\nexport const titlesForGenerator = [ 'Developer', 'Development Manager', 'QA Tester', 'QA Manager', 'Sales Person', 'Sales Manager']","import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\n\r\nimport './EmployeesNav.css'\r\n\r\nimport {employeesConfig} from '../config/employees_config'\r\nconst {employees, titleStatistic, search, generation, salaryStatistics} = employeesConfig\r\n\r\nexport default function EmployeesNav(){\r\n  return(\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Link className=\"navbar-brand\" to={employees}>EmployesManager</Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={employees}>All employees</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={titleStatistic}>Title statistics</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={search}>Employe search</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={generation}>Employe generator</NavLink>\r\n            </li>          \r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={salaryStatistics}>Salary statistics</NavLink>\r\n            </li>\r\n          </ul>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function RadioBoxes({name, value, label, items, handler, errors, discription}){\r\n  return(\r\n    <div className=\"form-group\">\r\n      <legend style={{paddingLeft:0}} className=\"col-form-label pt-0\">{label}</legend>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item}>\r\n          <input className=\"form-check-input\" checked={value === item} onChange={handler} type=\"radio\" name={name} id={`radio${item}`} value={item} />\r\n          <label style={{textTransform: 'capitalize'}} className={`form-check-label ${!value && 'isinvalid'}`} htmlFor={`radio${item}`}>{item}</label>\r\n        </div>\r\n      ))}\r\n      <small className=\"form-text text-muted\">{discription}</small>\r\n      {errors[name] && <small className=\"form-text text-danger\">{errors[name]}</small>}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function InputSelect({name, label, items, handler, discription}){\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={`${name}-select-id`}>{label}</label>\r\n      <select id={`${name}-select-id`} className=\"form-control\" onChange={handler} name={name}>\r\n        {items.map(item => (\r\n          <option key={item} value={item}>{item}</option>\r\n        ))}\r\n      </select>\r\n      <small className=\"form-text text-muted\">{discription}</small>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function EmailWithFixPart({name, label, fixPart, value, handler, errors, discription}){\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={`${name}-email-id`}>{label}</label>\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"validationTooltipUsernamePrepend\">{fixPart}</span>\r\n        </div>\r\n        <input \r\n          type=\"text\" \r\n          value={value} \r\n          onChange={handler} \r\n          className={`form-control ${(!value || errors[name])&& 'isinvalid'}`} \r\n          id={`${name}-email-id`} \r\n          name={name}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n      <small className=\"form-text text-muted\">{discription}</small>\r\n      {errors[name] && <small className=\"form-text text-danger\">{errors[name]}</small>}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function InputRange({name, min, max, label, value, handler, discription}){\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={`${name}-range-id`}>{label}: <strong>{value}</strong></label>\r\n      <input \r\n        type=\"range\" \r\n        className=\"custom-range\" \r\n        min={min} \r\n        max={max} \r\n        id={`${name}-range-id`} \r\n        onChange={handler} \r\n        value={value} \r\n        name={name}\r\n      />\r\n      <small className=\"form-text text-muted\">{discription}</small>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function InputElement({name, type, min, max, value, label, handler, errors={}, maxLength, discription}){\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={`${name}-input-id`}>{label}</label>\r\n      <input \r\n        type={type} \r\n        value={value} \r\n        onChange={handler} \r\n        maxLength={maxLength}\r\n        min={min} \r\n        max={max} \r\n        className={`form-control ${(!value || errors[name]) && 'isinvalid'}`} \r\n        id={`${name}-input-id`}\r\n        name={name} \r\n        autoComplete=\"off\"\r\n      />\r\n      <small className=\"form-text text-muted\">{discription}</small>\r\n      {errors[name] && <small className=\"form-text text-danger\">{errors[name]}</small>}\r\n    </div>\r\n  )\r\n}","import React from 'react'; \r\n\r\nimport { salary, genders, titles, idLength, nameMinLength } from '../../../config/employees_config';\r\nimport RadioBoxes from '../../../shared/FormElements/RadioBoxes'\r\nimport InputSelect from '../../../shared/FormElements/InputSelect'\r\nimport EmailWithFixPart from '../../../shared/FormElements/EmailWithFixPart'\r\nimport InputRange from '../../../shared/FormElements/InputRange'\r\nimport InputElement from '../../../shared/FormElements/InputElement'\r\n\r\nconst [minSalary, maxSalary] = salary;\r\n\r\nexport default class EmployeeForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.isInvalid = true;\r\n    this.state = {\r\n      emailFirstPart: '@',\r\n      formState: {\r\n        id: '',\r\n        emailAddress: '',\r\n        name: '',\r\n        gender: '',\r\n        salary: '5000',\r\n        title: titles[0]\r\n      },\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  emailGenerator = ()=>{\r\n      const emailFirstPart = this.state.formState.name + this.state.formState.id.substring(0,3) + this.state.emailFirstPart.slice(-1);\r\n      this.setState({emailFirstPart})\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let {name, value} = event.target;\r\n    const formState = {...this.state.formState};\r\n    formState[name] = value;\r\n    // second argument for be sure that state is already updated\r\n    this.setState({formState}, () => {if (name === 'name' || name === 'id') this.emailGenerator()});\r\n  }\r\n\r\n  // something like middleware, to not get a user put letters in field of ID\r\n  numberTextFieldKeyCheck = event => {\r\n    const errors = this.state.errors;\r\n    errors['id'] = ''\r\n    if (/^\\d+$/.test(event.target.value) || event.target.value === '') {\r\n      this.minLengthValidator(event, idLength)\r\n    } else {\r\n      errors['id'] = 'This field accept only digits!'\r\n    }\r\n    this.setState({errors})\r\n  }\r\n\r\n  // minimal length validator\r\n  minLengthValidator = (event, min) => {\r\n    let {name, value} = event.target;\r\n    const errors = this.state.errors;\r\n    errors[name] = '';\r\n    if (value.length < min) {\r\n      errors[name] = `This field should be not less than ${min} symbols`;\r\n    }\r\n    this.setState({ errors });\r\n    this.changeHandler(event)\r\n  }   \r\n\r\n  // email validation. it`s very simple I know, but it`s something\r\n  emailValidator = event => {\r\n    let {name, value} = event.target;\r\n    const errors = this.state.errors;\r\n    errors[name] = '';\r\n    if (!(/\\w+@\\w+\\.\\w{2,}/.test(this.state.emailFirstPart + value))) {\r\n      errors[name] = `E-mail is invalid`;\r\n    }\r\n    this.setState({ errors });\r\n    this.changeHandler(event)\r\n  }\r\n\r\n  // checking if we have some errors in state.error and we have some fields untouched\r\n  checkErrors = () => {\r\n    if (Object.values(this.state.formState).some(item => item === '') || Object.values(this.state.errors).some(item => item !== '')) {\r\n      this.isInvalid = true;\r\n    } else {\r\n      this.isInvalid = false;\r\n    }\r\n  }\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    const employeData = {...this.state.formState};\r\n    employeData.emailAddress = this.state.emailFirstPart + this.state.formState.emailAddress;\r\n    if (!this.props.addFunc(employeData)) {\r\n      const errors = this.state.errors;\r\n      errors['id'] = 'This ID already exists';\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    this.checkErrors();\r\n    return(\r\n        <form onSubmit={this.submit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <InputElement \r\n                type='text'\r\n                name='id'\r\n                value={this.state.formState['id']} \r\n                label='Employe ID'\r\n                handler={this.numberTextFieldKeyCheck}\r\n                errors={this.state.errors}\r\n                maxLength={idLength}\r\n                discription={`ID should be an unique number containing ${idLength} digits`}\r\n              />\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <InputElement \r\n                type='text'\r\n                name='name'\r\n                value={this.state.formState['name']} \r\n                label='Employe name'\r\n                handler={event=>{this.minLengthValidator(event, nameMinLength)}}\r\n                errors={this.state.errors}\r\n                discription={`Name should be any string with length not less than ${idLength} symbols`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <RadioBoxes \r\n                name='gender'\r\n                value={this.state.formState.gender}\r\n                label='Gender'\r\n                items={genders}\r\n                handler={this.changeHandler}\r\n                errors={this.state.errors}\r\n                discription='Сhoose gender'\r\n              />\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <InputSelect \r\n                name='title'\r\n                label='Title'\r\n                items={titles}\r\n                handler={this.changeHandler}\r\n                discription='Сhoose title'\r\n              />\r\n            </div>\r\n          </div>          \r\n          <EmailWithFixPart \r\n            name='emailAddress'\r\n            label='E-mail address'\r\n            fixPart={this.state.emailFirstPart}\r\n            value={this.state.formState.emailAddress}\r\n            handler={this.emailValidator}\r\n            errors={this.state.errors}\r\n            discription='Enter e-mail address'\r\n          />\r\n          <InputRange\r\n            name='salary'\r\n            min={minSalary}\r\n            max={maxSalary}\r\n            label='Salary'\r\n            value={this.state.formState.salary}\r\n            handler={this.changeHandler}\r\n            discription='Сhoose salary'\r\n          />\r\n          <div className=\"form-group\">\r\n            <button disabled={this.isInvalid} type=\"submit\" className='btn btn-outline-dark'>Add new employe</button>\r\n          </div>\r\n          { Object.values(this.state.formState).some(item => item === '') && <small className=\"form-text text-danger\">Please fill  all fields</small> }\r\n        </form>\r\n    )\r\n  }\r\n  \r\n}","import React from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nexport default function ModalWindow({show, handleConfirm, handleCancel, header, bodyText, nameConfirm, nameCancel}) {\r\n\r\n  return (\r\n      <Modal show={show} onHide={handleCancel}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{header}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{bodyText}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"dark\" onClick={handleCancel}>\r\n            {nameCancel}\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirm}>\r\n            {nameConfirm}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function TableCols({data, type}){\r\n  return(\r\n    data.map((elem, index)=>(type==='th' ? <th key={index}>{elem}</th> : <td key={index}>{elem}</td>))\r\n  )\r\n\r\n}","import React from 'react';\r\n\r\nimport TableCols from './TableCols'\r\n\r\nexport default function Table(props){\r\n\r\n  const orderTableRecords = props.body.map(\r\n    item => {\r\n      return (\r\n        <tr key={props.keyForRows(item)}>\r\n          <TableCols data={Object.values(item)}/>\r\n        </tr>\r\n      )\r\n    }\r\n  ) \r\n\r\n  return(\r\n    <div className={`${props.className}`}> \r\n      <table className='table table-bordered table-hover'>\r\n        <thead>\r\n          <tr>\r\n            <TableCols type='th' data={props.header} />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orderTableRecords}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function Card(props){\r\n  return (\r\n    <div className={`card ${props.className}`}>\r\n      <div className=\"card-header\">\r\n        <h4>{props.label}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport EmployeeForm from './Components/EmployeeForm'\r\nimport ModalWindow from '../../shared/ModalWindow'\r\nimport Table from '../../shared/Table'\r\nimport Card from '../../shared/Card'\r\n\r\nimport './Employees.css'\r\n\r\nexport default class Employees extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.idToRemove = null;\r\n    this.state = {\r\n      showAddForm: 0,\r\n      showModal: false\r\n    }\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n  }\r\n\r\n  addEmployee(employe){\r\n    const employees = [...this.props.employees];\r\n    if (employees.find(item => item.id === employe.id)){\r\n      return false;\r\n    }\r\n    employees.splice(0,0, employe);\r\n    this.props.updateEmployees(employees);\r\n    this.setState({showAddForm:0});\r\n    return true;\r\n  }\r\n\r\n  pageToggle = ()=> {\r\n    this.setState(prev=>({showAddForm: !prev.showAddForm}))\r\n  }\r\n\r\n  removeEmployee = () =>{\r\n    let removedItems = [];\r\n    const employees = [...this.props.employees];\r\n    removedItems = _.remove(employees, elem => elem.id === this.idToRemove);\r\n    this.props.updateEmployees(employees);\r\n    this.setState({showModal:false});\r\n    return removedItems.length !== 0\r\n  }\r\n\r\n  removeHandler (id) {\r\n    console.log(id)\r\n    this.idToRemove=id; \r\n    this.setState({showModal:true});\r\n  }\r\n\r\n  modalClose = () => {this.setState({showModal: false})}\r\n\r\n  render(){\r\n\r\n    return(\r\n      <>\r\n        <ModalWindow \r\n          show={this.state.showModal} \r\n          handleConfirm={this.removeEmployee} \r\n          handleCancel={this.modalClose}\r\n          header={'Remove employe'}\r\n          bodyText={`Do you really want remove employe with ID ${this.idToRemove}?`}\r\n          nameConfirm={'Remove!'}\r\n          nameCancel={'Cancel'}\r\n        />\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row employees-page-header\">\r\n            {!this.state.showAddForm ?\r\n              <button type=\"button\" className=\"btn btn-dark\" onClick={this.pageToggle}><i className=\"fa fa-plus-circle\"></i>Add new employe</button>:\r\n              <button type=\"button\" className=\"btn btn-dark\" onClick={this.pageToggle}><i className=\"fas fa-table\"></i>Show table</button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <Card label='All emloyees' className='employees-card'>\r\n        {\r\n          this.state.showAddForm ?\r\n          <EmployeeForm addFunc={this.addEmployee} /> :\r\n          (\r\n            // render Table or Alert if employees is empty\r\n            this.props.employees.length > 0 ?\r\n            <Table \r\n              className=\"table-employees\" \r\n              keyForRows = {obj => obj.id}\r\n              body={this.props.employees.map(item=>{ \r\n                item = {...item};\r\n                item.func=<i className='fa fa-trash' onClick={this.removeHandler.bind(this, item.id)}></i>; \r\n                return item; \r\n              })}\r\n              header={['ID','e-mail', 'Name', 'Gender', 'Salary', 'Title', <i className='fa fa-trash'></i>]}\r\n            /> :\r\n            <div className=\"alert alert-info\" role=\"alert\">No employes in db</div>\r\n          )\r\n        }\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Card from '../../shared/Card'\r\nimport Table from '../../shared/Table'\r\n\r\nimport './TitleStatistics.css'\r\n\r\nexport default function EmployeesStatistics({employees}){\r\n  const statisticsObj = _.countBy(employees, 'title'); \r\n  const statisticsArray = Object.entries(statisticsObj).map((item, index) => { return {title: item[0], count: item[1]} })\r\n\r\n  return(\r\n    <Card label='Salary statistics' className='title_statistic-card'>\r\n      {employees.length ?\r\n      <Table className=\"table-title_statistic\" keyForRows = {obj => obj.title} body={statisticsArray} header={['Title','Count']}/> :\r\n      <div className=\"alert alert-info\" role=\"alert\">No employes in db</div>\r\n      } \r\n    </Card>\r\n  )\r\n}","export function getRandomNumber(min, max) {\r\n  return min + Math.round(Math.random() * (max - min));\r\n}\r\n\r\nexport function getRandomElement(array) {\r\n  return array[getRandomNumber(0, array.length - 1 )];\r\n}\r\n","import React from 'react'; \r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport {getRandomNumber, getRandomElement} from '../../utils/random'\r\nimport {firstIdForGenerator, domainsForGenerator as domains, namesForGenerator as names, titlesForGenerator as titles, salary} from '../../config/employees_config'\r\nimport InputElement from '../../shared/FormElements/InputElement'\r\nimport Card from '../../shared/Card'\r\nimport {employeesConfig} from '../../config/employees_config'\r\n\r\nimport './EmployeesGeneration.css'\r\n\r\nconst [minSalary, maxSalary] = salary;\r\nconst {employees} = employeesConfig\r\nlet idCount = firstIdForGenerator;\r\n\r\nfunction generateEmploye(){\r\n  const id = idCount++;\r\n  const {name, gender} = getRandomElement(names);\r\n  const salary = getRandomNumber(+minSalary, +maxSalary);\r\n  const title = getRandomElement(titles);\r\n  const emailAdress = `${name}${id.toString().substring(0,3)}@${getRandomElement(domains)}`;\r\n  return {id, emailAdress, name, gender, salary, title};\r\n}\r\n\r\nexport default class EmployeesGeneration extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      numberOFLines:10,\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  onChangeHandler = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    const employees = []\r\n    for (let i=0; i<this.state.numberOFLines; i++){\r\n      employees.push(generateEmploye())\r\n    }\r\n    this.props.updateEmployees(employees);\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <>\r\n      {this.state.redirect && <Redirect to={employees} />}\r\n        <Card className='generator-card' label='Generate employees'>\r\n          <form onSubmit={this.submit}>\r\n            <div className=\"form-row align-items-center\">\r\n              <div className=\"col-md-auto\">\r\n                <InputElement \r\n                  type='number'\r\n                  name='numberOFLines'\r\n                  label='Employees count'\r\n                  value={this.state.numberOFLines}\r\n                  handler={this.onChangeHandler}\r\n                  discription='Insert how many employees do you want insert in db'\r\n                  max={100}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-auto\">\r\n                <button type=\"submit\" className='btn btn-outline-dark'>Generate!</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nimport {titlesForGenerator as titles, salary} from '../../../config/employees_config'\r\nimport InputSelect from '../../../shared/FormElements/InputSelect'\r\nimport InputRange from '../../../shared/FormElements/InputRange'\r\n\r\nconst [minSalary, maxSalary] = salary;\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      minsalary: minSalary,\r\n      maxsalary: maxSalary,\r\n      title:''\r\n    }\r\n  }\r\n\r\n  onChangeHandler = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  filterFunction = item => {\r\n    const salaryCheck = (item.salary >= this.state.minsalary) && (item.salary < this.state.maxsalary)\r\n    if (!!this.state.title) {\r\n      return (item.title === this.state.title) && salaryCheck;\r\n    } else {\r\n      return salaryCheck;\r\n    }\r\n  }\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    const employeesSearch = this.props.employees.filter(this.filterFunction);\r\n    this.props.updateEmployeesSearch(employeesSearch);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-row align-items-center\">\r\n          <div className=\"col-md\">\r\n            <InputRange\r\n              name='minsalary'\r\n              min={minSalary}\r\n              max={this.state.maxsalary}\r\n              label='Min salary'\r\n              value={this.state.minsalary}\r\n              handler={this.onChangeHandler}\r\n              discription={`Сhoose salary: ${minSalary} - ${this.state.maxsalary}`}\r\n            />\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <InputRange\r\n              name='maxsalary'\r\n              min={this.state.minsalary}\r\n              max={maxSalary}\r\n              label='Max salary'\r\n              value={this.state.maxsalary}\r\n              handler={this.onChangeHandler}\r\n              discription={`Сhoose salary: ${this.state.minsalary} - ${maxSalary}`}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-auto\">\r\n            <InputSelect \r\n              name='title'\r\n              label='Title'\r\n              items={['', ...titles]}\r\n              handler={this.onChangeHandler}\r\n              discription='Сhoose title'\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-auto\">\r\n            <button type=\"submit\" className='btn btn-outline-dark'><i className=\"fas fa-search\"></i>Search!</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n\r\n","import React from 'react'; \r\n\r\nimport SearchForm from './components/SearchForm'\r\nimport Card from '../../shared/Card'\r\nimport Table from '../../shared/Table'\r\n\r\nimport './EmployeesSearch.css'\r\n\r\nexport default class EmployeesSearch extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      // I show all employees for default\r\n      employeesSearch: this.props.employees\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  updateEmployeesSearch = employeesSearch => this.setState({employeesSearch})\r\n \r\n  render(){\r\n    return(\r\n      <Card className='search-card' label='Search'>\r\n      <SearchForm employees={this.props.employees} updateEmployeesSearch={this.updateEmployeesSearch}/>  \r\n      {\r\n        this.state.employeesSearch.length>0 ?\r\n        <Table className=\"table-search\" keyForRows = {obj => obj.id} body={this.state.employeesSearch} header={['ID','e-mail', 'Name', 'Gender', 'Salary', 'Title']} /> :\r\n        <div className=\"alert alert-info\" role=\"alert\">No employes for this parameters</div>\r\n      }\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport InputElement from '../../../shared/FormElements/InputElement'\r\n\r\nclass SalaryStatisticForm extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      interval:5000,\r\n      rangesCounts:[],\r\n      showStatistic: false\r\n    }\r\n  }\r\n\r\n  onChangeHandler = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    this.props.submit(+this.state.interval)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-row align-items-center\">\r\n          <div className=\"col-sm\">\r\n            <InputElement \r\n              type='number'\r\n              name='interval'\r\n              label='Range interval'\r\n              value={this.state.interval}\r\n              handler={this.onChangeHandler}\r\n              discription='Insert salary interval value for getting salary statistics grouped by the ranges'\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-auto\">\r\n            <button disabled={this.isInvalid} type=\"submit\" className='btn btn-outline-dark'>Get statistic</button>\r\n            </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SalaryStatisticForm;","import React from 'react'; \r\nimport _ from 'lodash'\r\n\r\nimport {salary} from '../../config/employees_config'\r\nimport Card from '../../shared/Card'\r\nimport SalaryStatisticForm from './component/SalaryStatisticForm'\r\n\r\nimport './SalaryStatistics.css'\r\n\r\nconst [minSalary, maxSalary] = salary;\r\n\r\nexport default class SalaryStatistics extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.maxActualSalaryObj = _.maxBy(this.props.employees, item=>item.salary)\r\n    this.minActualSalaryObj = _.minBy(this.props.employees, item=>item.salary)\r\n    this.totalBudget = this.props.employees.reduce((accum, current) => accum + current.salary, 0)\r\n    this.interval = null; // i think its not best way, but i cant use state without rerender list\r\n    this.state={\r\n      rangesCounts:[],\r\n      showStatistic: false\r\n    }\r\n  }\r\n\r\n  submit = interval => {\r\n    if (this.props.employees.length > 0) {\r\n      this.setState({rangesCounts:_.countBy(this.props.employees, item => Math.trunc((item.salary - minSalary)/interval))});\r\n      this.interval = interval;\r\n    }\r\n    this.setState({showStatistic: true});\r\n  }\r\n\r\n  rangeList = () => {\r\n    // here i need check all ranges if we want display ranges with 0 employes\r\n    const rangeListItems = [];\r\n    for (let i=0;i<Math.trunc((maxSalary-minSalary)/this.interval)+1; i++){\r\n      rangeListItems.push(\r\n        <li className=\"list-group-item\" key={i}>\r\n          {minSalary + this.interval * i} - {minSalary + this.interval * (i + 1)}: {this.state.rangesCounts[i]?this.state.rangesCounts[i]:0}\r\n        </li>\r\n      )\r\n    }\r\n    return rangeListItems;\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n          <Card className='salary_statistic-card' label='Salary statistics'>\r\n            <SalaryStatisticForm submit={this.submit} />\r\n          {\r\n            this.state.showStatistic &&\r\n              (\r\n              this.props.employees.length > 0 ?\r\n              <ul className=\"list-group range_list\">{this.rangeList()}</ul> :\r\n              <div className=\"alert alert-info\" role=\"alert\">No employes in db</div>\r\n              )\r\n          }\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Actual minimal salary: ₪{this.minActualSalaryObj ? this.minActualSalaryObj.salary : '0'}</li>\r\n            <li className=\"list-group-item\">Actual maximal salary: ₪{this.maxActualSalaryObj ? this.maxActualSalaryObj.salary : '0'}</li>\r\n            <li className=\"list-group-item\">Total salary budget: ₪{this.totalBudget}</li>\r\n          </ul>\r\n          </Card>\r\n\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\nimport {HashRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\n\nimport EmployeesNav from './shared/EmployeesNav'\nimport {employeesConfig} from './config/employees_config'\nimport Employees from './pages/Employees/Employees'\nimport TitleStatistics from './pages/TitleStatistics/TitleStatistics'\nimport EmployeesGeneration from './pages/EmployeesGeneration/EmployeesGeneration'\nimport EmployeesSearch from './pages/EmployeesSearch/EmployeesSearch'\nimport SalaryStatistics from './pages/SalaryStatistics/SalaryStatistics'\n\n\nconst {employees, titleStatistic, search, generation, salaryStatistics} = employeesConfig\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      employees: []\n    }\n  }\n\n  updateEmployees = employees => this.setState({employees})\n\n  render(){\n    return (\n      <Router>\n        <EmployeesNav />\n        <Switch>\n          <Route path='/' exact><Redirect to={employees}/></Route>\n          <Route path={employees}><Employees employees={this.state.employees} updateEmployees={this.updateEmployees}/></Route>\n          <Route path={titleStatistic}><TitleStatistics employees={this.state.employees}/></Route>\n          <Route path={search}><EmployeesSearch employees={this.state.employees} /></Route>\n          <Route path={generation}><EmployeesGeneration updateEmployees={this.updateEmployees} /></Route>\n          <Route path={salaryStatistics}><SalaryStatistics employees={this.state.employees} /></Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}